// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`babel-plugin-jest-hoist automatic react runtime: automatic react runtime 1`] = `

jest.mock('./App', () => () => <div>Hello world</div>);

      ↓ ↓ ↓ ↓ ↓ ↓

var _jsxFileName = "/root/project/src/file.js";

_getJestObj().mock(
  "./App",
  () => () =>
    /*#__PURE__*/ _jsxDEV(
      "div",
      {
        children: "Hello world",
      },
      void 0,
      false,
      {
        fileName: _jsxFileName,
        lineNumber: 1,
        columnNumber: 32,
      },
      this
    )
);

import { jsxDEV as _jsxDEV } from "react/jsx-dev-runtime";

function _getJestObj() {
  const { jest } = require("@jest/globals");

  _getJestObj = () => jest;

  return jest;
}


`;

exports[`babel-plugin-jest-hoist top level mocking: top level mocking 1`] = `

require('x');

jest.enableAutomock();
jest.disableAutomock();

      ↓ ↓ ↓ ↓ ↓ ↓

_getJestObj().enableAutomock();

_getJestObj().disableAutomock();

function _getJestObj() {
  const { jest } = require("@jest/globals");

  _getJestObj = () => jest;

  return jest;
}

require("x");


`;

exports[`babel-plugin-jest-hoist within a block with no siblings: within a block with no siblings 1`] = `

beforeEach(() => {
  jest.mock('someNode')
})

      ↓ ↓ ↓ ↓ ↓ ↓

function _getJestObj() {
  const { jest } = require("@jest/globals");

  _getJestObj = () => jest;

  return jest;
}

beforeEach(() => {
  _getJestObj().mock("someNode");
});


`;

exports[`babel-plugin-jest-hoist within a block: within a block 1`] = `

beforeEach(() => {
  require('x')
  jest.mock('someNode')
})

      ↓ ↓ ↓ ↓ ↓ ↓

function _getJestObj() {
  const { jest } = require("@jest/globals");

  _getJestObj = () => jest;

  return jest;
}

beforeEach(() => {
  _getJestObj().mock("someNode");

  require("x");
});


`;
